# Generated by Django 4.2.6 on 2024-04-21 17:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EligibilitySnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submission_date", models.DateTimeField(auto_now=True)),
                ("is_batch", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="HouseholdMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("age", models.IntegerField(blank=True, null=True)),
                ("student", models.BooleanField(blank=True, null=True)),
                ("student_full_time", models.BooleanField(blank=True, null=True)),
                ("pregnant", models.BooleanField(blank=True, null=True)),
                ("unemployed", models.BooleanField(blank=True, null=True)),
                ("worked_in_last_18_mos", models.BooleanField(blank=True, null=True)),
                ("visually_impaired", models.BooleanField(blank=True, null=True)),
                ("disabled", models.BooleanField(blank=True, null=True)),
                ("long_term_disability", models.BooleanField(blank=True, null=True)),
                ("veteran", models.BooleanField(blank=True, null=True)),
                ("medicaid", models.BooleanField(blank=True, null=True)),
                ("disability_medicaid", models.BooleanField(blank=True, null=True)),
                ("has_income", models.BooleanField(blank=True, null=True)),
                ("has_expenses", models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Screen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("completed", models.BooleanField()),
                ("submission_date", models.DateTimeField(blank=True, null=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                (
                    "referral_source",
                    models.CharField(
                        blank=True, default=None, max_length=320, null=True
                    ),
                ),
                (
                    "referrer_code",
                    models.CharField(
                        blank=True, default=None, max_length=320, null=True
                    ),
                ),
                ("agree_to_tos", models.BooleanField(blank=True, null=True)),
                ("is_13_or_older", models.BooleanField(blank=True, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "county",
                    models.CharField(
                        blank=True, default=None, max_length=120, null=True
                    ),
                ),
                ("household_size", models.IntegerField(blank=True, null=True)),
                (
                    "last_tax_filing_year",
                    models.CharField(
                        blank=True, default=None, max_length=120, null=True
                    ),
                ),
                (
                    "household_assets",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "housing_situation",
                    models.CharField(
                        blank=True, default=None, max_length=30, null=True
                    ),
                ),
                (
                    "last_email_request_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("is_test", models.BooleanField(blank=True, default=False)),
                ("is_test_data", models.BooleanField(blank=True, null=True)),
                ("is_verified", models.BooleanField(blank=True, default=False)),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                (
                    "request_language_code",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "has_benefits",
                    models.CharField(
                        blank=True,
                        default="preferNotToAnswer",
                        max_length=32,
                        null=True,
                    ),
                ),
                ("has_tanf", models.BooleanField(blank=True, default=False, null=True)),
                ("has_wic", models.BooleanField(blank=True, default=False, null=True)),
                ("has_snap", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_lifeline",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_acp", models.BooleanField(blank=True, default=False, null=True)),
                ("has_eitc", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_coeitc",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_nslp", models.BooleanField(blank=True, default=False, null=True)),
                ("has_ctc", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_medicaid",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "has_rtdlive",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "has_cccap",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "has_mydenver",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_chp", models.BooleanField(blank=True, default=False, null=True)),
                ("has_ccb", models.BooleanField(blank=True, default=False, null=True)),
                ("has_ssi", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_andcs",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_chs", models.BooleanField(blank=True, default=False, null=True)),
                ("has_cpcr", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_cdhcs",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_dpp", models.BooleanField(blank=True, default=False, null=True)),
                ("has_ede", models.BooleanField(blank=True, default=False, null=True)),
                ("has_erc", models.BooleanField(blank=True, default=False, null=True)),
                ("has_leap", models.BooleanField(blank=True, default=False, null=True)),
                ("has_oap", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_coctc",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_upk", models.BooleanField(blank=True, default=False, null=True)),
                ("has_ssdi", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_cowap",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_ubp", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_pell_grant",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("has_rag", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "has_employer_hi",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                (
                    "has_private_hi",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                (
                    "has_medicaid_hi",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                (
                    "has_medicare_hi",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                (
                    "has_chp_hi",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                ("has_no_hi", models.BooleanField(blank=True, default=None, null=True)),
                ("has_va", models.BooleanField(blank=True, default=None, null=True)),
                (
                    "needs_food",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_baby_supplies",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_housing_help",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_mental_health_help",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_child_dev_help",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_funeral_help",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_family_planning_help",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_job_resources",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_dental_care",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "needs_legal_services",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="screens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProgramEligibilitySnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("new", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=320)),
                ("name_abbreviated", models.CharField(max_length=32)),
                ("value_type", models.CharField(max_length=120)),
                (
                    "estimated_value",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "estimated_delivery_time",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                (
                    "estimated_application_time",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("eligible", models.BooleanField()),
                ("failed_tests", models.JSONField(blank=True, null=True)),
                ("passed_tests", models.JSONField(blank=True, null=True)),
                (
                    "eligibility_snapshot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="program_snapshots",
                        to="screener.eligibilitysnapshot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sent", models.DateTimeField(auto_now=True)),
                ("type", models.CharField(max_length=30)),
                (
                    "cell",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                ("content", models.CharField(blank=True, max_length=320, null=True)),
                ("uid", models.IntegerField(blank=True, null=True)),
                (
                    "screen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="screener.screen",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Insurance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dont_know", models.BooleanField(default=False)),
                ("none", models.BooleanField(default=True)),
                ("employer", models.BooleanField(default=False)),
                ("private", models.BooleanField(default=False)),
                ("chp", models.BooleanField(default=False)),
                ("medicaid", models.BooleanField(default=False)),
                ("medicare", models.BooleanField(default=False)),
                ("emergency_medicaid", models.BooleanField(default=False)),
                ("family_planning", models.BooleanField(default=False)),
                ("va", models.BooleanField(default=False)),
                (
                    "household_member",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insurance",
                        to="screener.householdmember",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IncomeStream",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("frequency", models.CharField(blank=True, max_length=30, null=True)),
                ("hours_worked", models.IntegerField(blank=True, null=True)),
                (
                    "household_member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="income_streams",
                        to="screener.householdmember",
                    ),
                ),
                (
                    "screen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="income_streams",
                        to="screener.screen",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="householdmember",
            name="screen",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="household_members",
                to="screener.screen",
            ),
        ),
        migrations.CreateModel(
            name="Expense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("frequency", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "household_member",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="expenses",
                        to="screener.householdmember",
                    ),
                ),
                (
                    "screen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenses",
                        to="screener.screen",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="eligibilitysnapshot",
            name="screen",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="eligibility_snapshots",
                to="screener.screen",
            ),
        ),
    ]
